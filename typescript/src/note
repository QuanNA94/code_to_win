
1. Cấu trúc dữ liệu và giải thuật

2. Hyper Text Markup language: (ngon ngu dịnh dạng đánh dấu siêu văn bản- không phải ngôn ngữ lập trình)

3. Ngôn ngữ lập trình (Programing language) : Javascript, Java, Python, C , C#, C++, Typescript, Flutter, 

4. Library: ReactJS, 

5. Framework: .Net - framework duoc xay dung tu C#, NestJS, NextJS (được xây dung tu Javascript)

6. package.json: quan ly file , tren nen tang moi truong NodeJS (NOTE:project run NodeJS)

7. NodeJS ? (all in)
    - nen tang (platform), moi truong(env) chay run-time 
    - bien dich (compile) ngon ngu JS thanh ma may (machine code)
    - 
8. npm la gi ? (Node package manager) - default install with nodejs
    - tool tao va quan ly (install,remove, ...) cac thu vien nodejs | (registry)
    - npm len registy to find react package tren so dang ky neu co no se keo het toan bo src code cua react vao node_modules, neu khong co bao loi

9. npx ? (tu cai la do npm tu cai)
    - npm i -g create-react-app (gui request -> local , response local lun -> folder & file dc tao)
    - goi len registry, npx create react-app (gui request -> npm registy, response local) - thuc thi truc tiep khong can cai local

10. khong duoc commit node_modules -refresh lien tuc moi lan chay

11. package-lock.json: 
    - file ghi nhan cac version va dependency of all packages duoc install trong node_modules, 
    - khi run npm install, uu tien doc file package-lock de cai dat lib va version tuong ung, neu khong co file package-lock thi sau khi chay lenh npm i thi no se tu sinh ra. 
    - 

// các lệnh return phải return về cùng 1 kiểu dữ liệu
// ưu tiên kiểm tra các giá trị không hợp lệ đầu tiên
// Rút gọn hàm

- ten ham bat dau bang dong tu 

- // nullish coalescing operator: là toán tử hai ngôi, dùng để trả về giá trị khác null và undefined đầu tiên.

- return: tra ve gia tri & cung la lenh ket thuc ham

const: kieu khai bao bien || scope khai bao.

 const isValidValue = username === null || username === "" // isValidValue: ten bien = (toan tu/ phep gan) gia tri
    // isValidValue: statemen

- priority implement: && > || 

- return; -> return undefined
- 1 ham k return -> return undefined 

